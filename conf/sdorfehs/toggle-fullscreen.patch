diff --git a/actions.c b/actions.c
index 63accc4..390f7c7 100644
--- a/actions.c
+++ b/actions.c
@@ -199,6 +199,7 @@ static cmdret *cmd_focuslast(int interactive, struct cmdarg **args);
 static cmdret *cmd_focusleft(int interactive, struct cmdarg **args);
 static cmdret *cmd_focusright(int interactive, struct cmdarg **args);
 static cmdret *cmd_focusup(int interactive, struct cmdarg **args);
+static cmdret *cmd_fullscreen(int interactive, struct cmdarg **args);
 static cmdret *cmd_frestore(int interactive, struct cmdarg **args);
 static cmdret *cmd_fselect(int interactive, struct cmdarg **args);
 static cmdret *cmd_getenv(int interactive, struct cmdarg **args);
@@ -453,6 +454,7 @@ init_user_commands(void)
 	            "Frames: ", arg_REST);
 	add_command("fselect",		cmd_fselect,	1, 1, 1,
 	            "", arg_FRAME);
+	add_command("fullscreen",	cmd_fullscreen,	0, 0, 0);
 	add_command("getenv",		cmd_getenv,	1, 1, 1,
 	            "Variable: ", arg_STRING);
 	add_command("getsel",		cmd_getsel,	0, 0, 0);
@@ -5797,3 +5799,27 @@ cmd_commands(int interactive, struct cmdarg **args)
 	sbuf_free(sb);
 	return ret;
 }
+
+cmdret *
+cmd_fullscreen(int interactive, struct cmdarg **args)
+{
+	rp_window *win;
+
+	win = current_window();
+	if (!win)
+		return cmdret_new(RET_FAILURE, NULL);
+
+	rp_window *oldfs;
+
+	if ((oldfs = rp_current_screen->full_screen_win)) {
+		if (win == oldfs) {
+			oldfs->full_screen = 0;
+			remove_atom(oldfs->w, _net_wm_state, XA_ATOM,
+				_net_wm_state_fullscreen);
+			maximize(oldfs);
+		}
+	} else
+		window_full_screen(win);
+
+	return cmdret_new(RET_SUCCESS, NULL);
+}
diff --git a/sdorfehs.1 b/sdorfehs.1
index 9ac2b90..46413d5 100644
--- a/sdorfehs.1
+++ b/sdorfehs.1
@@ -380,6 +380,8 @@ can be changed by
 .Ic set Ns
 ting
 .Ar framesels .
+.It Ic fullscreen
+Toggle the current window's fullscreen property.
 .It Ic getenv Ar variable
 Output the value of the environment variable
 .Ar variable .
