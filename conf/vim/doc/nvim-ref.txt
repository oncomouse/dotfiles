==============================================================================
Welcome to nvim-ref						    *nvim-ref*

|nvim-ref| is a complete bibliography management utility for Neovim. In addition
to providing facilities to insert citations into documents (using |'omnifunc'|
or |'nvim-cmp'|, for instance), |nvim-ref| also has the ability to edit
`.bibtex` files, import citations into BibTeX from external sources (such as
ISBN or DOI), and otherwise completely manage your BibTex bibliographies from
within Neovim.

The plugin is analogous to, though not based on, the Emacs package org-ref.

Table of Contents:
  
------------------------------------------------------------------------------
Why nvim-ref?							    *nvim-ref-justify*

|nvim-ref| has three advantages over the myriad solutions available for working
with BibTeX in Neovim.

- <Fast> -- nvim-ref uses `lpeg-bibtex`, a very fast, Lua-native BibTeX
  parser that allows for speedy bibliography parsing without relying on
  external tools.
- <Flexible> -- nvim-ref's only other dependency is `plenary.nvim`, which is
  optional, but its modular nature means that, while it currently supports
  |nvim-cmp| for completion, it could support any framework.
- <Complete> -- There's no more relying on tools such as Zotero when working
  with nvim-ref. You can create and edit your BibTeX files in Neovim, quickly
  and easily.

------------------------------------------------------------------------------
Installing nvim-ref						    *nvim-ref-install*


|nvim-ref| has two requirements:

- lpeg-bibtex, from luarocks
- plenary.nvim (optional, but required for importing citations)

If you are comfortable installing luarocks, feel free to use any package
manager. However, packer.nvim can install luarocks and is therefore
recommended.

To install with packer.nvim, use the following:
>
    use({
          "oncomouse/nvim-ref",
          requires = "nvim-lua/plenary.nvim",
          rocks = { "lpeg-bibtex", server = "https://luarocks.org/dev" }
     })
<
------------------------------------------------------------------------------
Configuring nvim-ref						    *nvim-ref-setup*

------------------------------------------------------------------------------
Importing sources						    *nvim-ref-import*

------------------------------------------------------------------------------
Using nvim-ref for Completion					    *nvim-ref-completion*

								    *nvim-ref-completion-omni*
								    *nvim-ref-completion-cmp*
								    *nvim-ref-completion-null-ls*

------------------------------------------------------------------------------
Working with nvim-ref                                               *nvim-ref-working*

                                                                    *nvim-hooks*

------------------------------------------------------------------------------
Extending nvim-ref						    *nvim-ref-extend*

                                                                    *nvim-ref-extend-filetype*

Modules that add filetype support to nvim-ref need to export four methods and
a string from a file stored in `lua/nvim-ref/filetypes/<filetype>.lua`. The
four methods are:

- `ref(citation:Citation):string` -- Given a citation object, return a string
  representing a reference (without page number) for this filetype
- `citation(citation:Citation):string` -- Given a citation object, return a
  string representing a full citation (with page number) for this filetype.
- `find_bibliography(bufnum:number)` -- For the buffer represnted by bufnum
  return a table containing all bibliography files included in the document's
  metadata. Reading and parsing the metadata is up to you. The returned table
  can be empty.
- `setup()` -- Perform any additional configuration; should, at a minimum,
  trigger the `add_filetype` hook (see |nvim-ref-hooks|).

The module should also include a string named `start_pattern`, which is a vim
|regexp| used to locate citations in the current line, should any exist.

Below is an example module, based on Markdown, that adds support to the `help`
filetype:

>
    local M = {}

    function M.ref(citation)
	    return "@" .. citation.key
    end

    function M.citation(citation)
	    return {
		    before = "[@" .. citation.key .. ", ",
		    after = "]",
	    }
    end

    function M.find_bibliography(bufnum)
	    return {}
    end

    M.start_pattern = [[@\k*\%#]]

    function M.setup()
	    require("nvim-ref.hooks").trigger("add_filetype", {
		    type = "help",
	    })
    end
    return require("nvim-ref.filetypes.utils").setmetatable(M)
<

 vim:tw=78:ts=8:noet:ft=help:norl:
