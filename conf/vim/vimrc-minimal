" ==============================================================================
" Sourced from tpope/vim-sensible
" ==============================================================================
if has('autocmd')
filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
syntax enable
endif

set autoindent
set backspace=indent,eol,start
set complete-=i
set smarttab

set nrformats-=octal

if !has('nvim') && &ttimeoutlen == -1
set ttimeout
set ttimeoutlen=100
endif

set incsearch

set laststatus=2
set ruler
set wildmenu

if !&scrolloff
set scrolloff=1
endif
if !&sidescrolloff
set sidescrolloff=5
endif
set display+=lastline

if &encoding ==# 'latin1' && has('gui_running')
set encoding=utf-8
endif

if &listchars ==# 'eol:$'
set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
endif

if v:version > 703 || v:version == 703 && has('patch541')
set formatoptions+=j " Delete comment character when joining commented lines
endif

set autoread

if &history < 1000
set history=1000
endif
if &tabpagemax < 50
set tabpagemax=50
endif
if !empty(&viminfo)
set viminfo^=!
endif
set sessionoptions-=options
set viewoptions-=options

" Allow color schemes to do bright colors without forcing bold.
if &t_Co == 8 && $TERM !~# '^Eterm'
set t_Co=16
endif
" ==============================================================================
" My stuff:
" ==============================================================================
set visualbell t_vb= " Disable visual bell
set autowrite " Autosave files
set hidden " turn off buffer saving when switching
set lazyredraw " Don't redraw between macro runs (may make terminal flicker)

" Override Default Split Creation Locations:
set splitbelow
set splitright

" Line Numbering:
set number relativenumber
" Turn off line numbering in NeoVim terminal:
if has('nvim')
  augroup line-numbers
    autocmd!
    autocmd TermOpen * setlocal nonumber norelativenumber
  augroup END
endif

" Height Of The Preview Window:
let &previewheight = 14

" Use RipGrep For Grep:
if executable('rg')
  let &grepprg='rg --vimgrep'
  let &grepformat='%f:%l:%c:%m'
endif
