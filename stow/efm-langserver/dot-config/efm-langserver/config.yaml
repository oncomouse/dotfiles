---
version: 2
root-markers:
  - .git/
  - yarn.lock
  - poetry.toml
  - Gemfile
log-file: /tmp/efm.log
log-level: 1

tools:
  vim-vint: &vim-vint
    lint-command: 'vint -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'

  vale-lint: &vale-lint
    lint-command: 'vale --relative --output line ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l:%c:%*[^:]:%m'

  yaml-yamllint: &yaml-yamllint
    lint-command: 'yamllint -f auto -'
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - '  %l:%c       %tarning  %m'
      - '  %l:%c       %trror    %m'

  python-mypy: &python-mypy
    lint-command: 'mypy --show-column-numbers'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  sh-shellcheck: &sh-shellcheck
    lint-command: 'shellcheck -f gcc -x - | sed -e s/note:/info:/'
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tnfo: %m'

  sh-shfmt: &sh-shfmt
    format-command: 'shfmt -ci -s -bn'
    format-stdin: true

  html-htmlhint: &html-htmlhint
    lint-command: 'htmlhint --format=unix'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    lint-ignore-exit-code: true

  html-prettier: &html-prettier
    format-command: 'prettier --parser html'

  html-beautify: &html-beautify
    format-command: 'html-beautify'
    format-stdin: true

  css-prettier: &css-prettier
    format-command: 'prettier --parser css'

  json-prettier: &json-prettier
    format-command: 'prettier --parser json'

  json-jq: &json-jq
    lint-command: 'jq .'

  yaml-prettier: &yaml-prettier
    format-command: 'prettier --parser yaml'

  luacheck: &luacheck
    lint-command: >-
      luacheck --formatter visual_studio - --globals vim
      --read-globals after_each before_each it packer_plugins vimp
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - '%f(%l,%c) : %tarning %m'
      - '%f(%l,%c) : %trror %m'

  python-black: &python-black
    commands:
      - command: 'black --quiet --safe ${INPUT}'
        title: 'black format'

  python-pylint: &python-pylint
    lint-command: 'pylint --output-format=text --reports=no --score=no ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c: C%n: %m'
    root-markers:
      - setup.cfg
      - .pylintrc

  ruby-rubocop: &ruby-rubocop
    lint-command: 'rubocop --format emacs --force-exclusion --stdin ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    root-markers:
      - Gemfile
      - Rakefile
      - .rubocop.yml
    commands:
      - command: 'rubocop --auto-correct-all ${INPUT}'
        title: 'rubocop fix'

languages:

  vim:
    - <<: *vim-vint

  markdown:
    - <<: *vale-lint

  yaml:
    - <<: *yaml-yamllint
    - <<: *yaml-prettier

  python:
    - <<: *python-pylint
    - <<: *python-mypy
    - <<: *python-black

  sh:
    - <<: *sh-shellcheck
    - <<: *sh-shfmt

  html:
    - <<: *html-beautify
    - <<: *html-htmlhint

  css:
    - <<: *css-prettier

  scss:
    - <<: *css-prettier

  json:
    - <<: *json-jq
    - <<: *json-prettier

  lua:
    - <<: *luacheck

  ruby:
    - <<: *ruby-rubocop
