(deflisten tags `while true; do ristate -t | jq '.tags[0] | to_entries[].value[]' -rcM --unbuffered; sleep 1s; done`)
(deflisten title `while true; do ristate -w | jq '.title' -rcM --unbuffered; sleep 1s; done`)
(deflisten viewstag `while true; do ristate -vt | jq '.viewstag[0] | to_entries[].value' -rc --unbuffered; sleep 1s; done`)
(defpoll volume :interval "30s" `dwmblocks-volume.sh`)
(defpoll time :interval "1s" `date +"%a %m/%d %-I:%M %p "`)
; (defpoll network :interval "5s" "./scripts/get_network.sh")
; (defpoll spotify-status :interval "1s" `./scripts/get_media.sh`)
; (defpoll zypper-updates :interval "3600s" `./scripts/get_updates.sh`)
; (defpoll vol-info :interval "1s" `pamixer --get-volume`)
; (defpoll current-brightness :interval "1s" "light -G")
; (defpoll ping :interval "1s" "./scripts/get_ping.sh")
; (deflisten cpu-avg "./scripts/get_cpu.sh 3")

; (defwidget metric [label value onchange]
;   (box :orientation "h"
;        :class "metric"
;        :space-evenly false
;     (box :class "label" label)
;     (scale :min 0
;            :max 101
;            :active {onchange != ""}
;            :value value
;            :onchange onchange)))

(defwidget block [poll cmd]
  (box :class "block"
       :space-evenly false
       :orientation "h"
  (eventbox
    :onscroll "bash -c 'BUTTON=${{} == "up" ? 4 : 5} ${cmd}'" 
  (button
    :onclick "bash -c 'BUTTON=1 ${cmd}'"
    :onmiddleclick "bash -c 'BUTTON=2 ${cmd}'"
    :onrightclick "bash -c 'BUTTON=3 ${cmd}'"
  (label :limit-width 80 :text {poll})))))


; (defwidget brightness[]
;   (box
;     :class "brightness"
;     :space-evenly false
;   (metric :label  "☀︁"
;             :value current-brightness
;             :onchange "light -S {}")))

; (defwidget volume[]
;   (box
;     :halign "end"
;     :class "volume-box"
;   (metric :label " "
;     :value vol-info
;     :onchange "pamixer --set-volume {}")))

; (defwidget zypper[]
;   (box
;     :halign "fill"
;     :space-evenly false
;     :class "zypper-box"
;   (label :text " " :class "opensuse-logo")
;   (metric :label ""
;         :value zypper-updates
;         :onchange "")))

(defwidget volume_block[]
  (block
    :poll volume
    :cmd "dwmblocks-volume.sh"))

(defwidget date[]
  (box
    :orientation "h"
    :class "daily-date"
    :halign "center"
    :space-evenly "false"
    :spacing 5
  time))

(defwidget start[]
  (box
    :halign "start"
    (tag-indicator)))

(defwidget center[]
    (curwindow))

(defwidget side[]
  (box
    :halign "end"
    :space-evenly "false"
    :class "side-box"
    :spacing 8
  (volume_block)
  (date)
  ))

(defwidget curwindow[]
  (box
    :class "current-window"
    :halign "start"
    :space-evenly "false"
  (label :limit-width "40" :text {title ?: ""})))


(defwidget tag-indicator[]
  (box 
    :orientation "h"
    :halign "start"
    :class "tag-indicator-box"
  (eventbox
    :onscroll "./scripts/river-scroll.sh {} ${tags}"
  (box
    :space-evenly "true"
    :spacing 0
  (button
    :onclick "riverctl set-focused-tags 1"
    :class {tags == "1" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "1" || viewstag[1] == "1" || viewstag[2] == "1" || viewstag[3] == "1" || viewstag[4] == "1" || viewstag[5] == "1" || viewstag[6] == "1" || viewstag[7] == "1" || viewstag[8] == 1 }
  (label :text "1"))
  (button
    :onclick "riverctl set-focused-tags 2"
    :class {tags == "2" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "2" || viewstag[1] == "2" || viewstag[2] == "2" || viewstag[3] == "2" || viewstag[4] == "2" || viewstag[5] == "2" || viewstag[6] == "2" || viewstag[7] == "2" || viewstag[8] == 1 }
  (label :text "2"))
  (button
    :onclick "riverctl set-focused-tags 4"
    :class {tags == "3" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "3" || viewstag[1] == "3" || viewstag[2] == "3" || viewstag[3] == "3" || viewstag[4] == "3" || viewstag[5] == "3" || viewstag[6] == "3" || viewstag[7] == "3" || viewstag[8] == 1 }
  (label :text "3"))
  (button
    :onclick "riverctl set-focused-tags 8"
    :class {tags == "4" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "4" || viewstag[1] == "4" || viewstag[2] == "4" || viewstag[3] == "4" || viewstag[4] == "4" || viewstag[5] == "4" || viewstag[6] == "4" || viewstag[7] == "4" || viewstag[8] == 1 }
  (label :text "4"))
  (button
    :onclick "riverctl set-focused-tags 16"
    :class {tags == "5" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "5" || viewstag[1] == "5" || viewstag[2] == "5" || viewstag[3] == "5" || viewstag[4] == "5" || viewstag[5] == "5" || viewstag[6] == "5" || viewstag[7] == "5" || viewstag[8] == 1 }
  (label :text "5"))
  (button
    :onclick "riverctl set-focused-tags 32"
    :class {tags == "6" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "6" || viewstag[1] == "6" || viewstag[2] == "6" || viewstag[3] == "6" || viewstag[4] == "6" || viewstag[5] == "6" || viewstag[6] == "6" || viewstag[7] == "6" || viewstag[8] == 1 }
  (label :text "6"))
  (button
    :onclick "riverctl set-focused-tags 64"
    :class {tags == "7" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "7" || viewstag[1] == "7" || viewstag[2] == "7" || viewstag[3] == "7" || viewstag[4] == "7" || viewstag[5] == "7" || viewstag[6] == "7" || viewstag[7] == "7" || viewstag[8] == 1 }
  (label :text "7"))
  (button
    :onclick "riverctl set-focused-tags 128"
    :class {tags == "8" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "8" || viewstag[1] == "8" || viewstag[2] == "8" || viewstag[3] == "8" || viewstag[4] == "8" || viewstag[5] == "8" || viewstag[6] == "8" || viewstag[7] == "8" || viewstag[8] == 1 }
  (label :text "8"))
  (button
    :onclick "riverctl set-focused-tags 256"
    :class {tags == "9" ? "tag-active" : "tag-inactive"}
    :visible { viewstag[0] == "9" || viewstag[1] == "9" || viewstag[2] == "9" || viewstag[3] == "9" || viewstag[4] == "9" || viewstag[5] == "9" || viewstag[6] == "9" || viewstag[7] == "9" || viewstag[8] == 1 }
  (label :text "9"))
  ))))



(defwidget river-bar[]
  (centerbox :orientation "h"
  (start)
  (center)
  (side)))

(defwindow river-bar
  :monitor 0
  :exclusive "true"
  :focusable "false"
  :stacking "bottom"
  :geometry (geometry :x "0%"
          :y "0"
          :width "100%"
          :height "15px"
          :anchor "top center")
  (river-bar))

; vim:tabstop=2:shiftwidth=2:softtabstop=2:expandtab
