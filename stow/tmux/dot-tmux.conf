## Plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'oncomouse/dynamic-tmux'
## Behavior

# Escape Time
set -g escape-time 0
# Mouse
set -g mouse on
# Window Behavior
set -g base-index 1
set -g renumber-windows on
# Prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix
# Silence
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
setw -g clock-mode-style 12 

## Appearance
# Standard Status Colors
set -g status-fg colour7
set -g status-bg colour8
# Pane Borders
set -g pane-border-style 'bg=colour0 fg=colour8'
set -g pane-active-border-style 'bg=colour0 fg=colour7'

## Status
# Clear Right Status
set -g status-right ""
# Current Window Label (w/ Teal title):
set -g window-status-current-format "#I:#[fg=colour6]#W#[fg=default]#{?window_flags,#{window_flags}, }"
# Window labels (with pane count):
# tmux set -g window-status-format "#I:#W#{?window_flags,#{window_flags}, }#{?#{!=:#{window_panes},1},<#{window_panes}> ,}"
# tmux set -g window-status-current-format "#I:#W#{?window_flags,#{window_flags}, }#{?#{!=:#{window_panes},1},<#{window_panes}> ,}"

## Copy & Paste
# Options
set -s set-clipboard external
set-window-option -g mode-keys vi
# set -g @yank_action 'copy-pipe-no-clear'
# Basic Keys
bind-key -T copy-mode-vi Escape send-keys -X cancel

## Colored Underline in Kitty
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"           # true colour support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

## Key bindings
# Status
bind Space set status

# Splits
bind | split-window -hc "#{pane_current_path}"
bind - split-window -vc "#{pane_current_path}"
unbind '"'
unbind %

# Reload / Quit
bind r { source ~/.tmux.conf; display-message "Configuration Reloadedâ€¦" }
bind q confirm kill-window
bind Q confirm kill-server

# New Window Creation
bind Enter new-window

# bind t new-window
bind c new-window

# Switch previous windows without prefix
bind-key -n M-` next-window
bind-key -n M-~ previous-window

# Quicker Window Switching:
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind -n M-j if-shell "$is_vim" 'send-keys M-j'  'nextpane'
# bind -n M-k if-shell "$is_vim" 'send-keys M-k'  'prevpane'
# bind -n M-Space if-shell "$is_vim" 'send-keys M-Space' 'newpane'
# bind -n M-c if-shell "$is_vim" 'send-keys M-c' 'killpane'
# bind -n M-Enter if-shell "$is_vim" 'send-keys M-,' 'zoom'

run '~/.tmux/plugins/tpm/tpm'

bind -n M-Space newpane
# bind -n M-c killpane
bind -n M-j nextpane
bind -n M-k prevpane
bind -n M-Enter zoom

# DWM Tmux Binds:
bind -n M-n newpane
bind -n M-w newpanecurdir
bind -n M-< rotateccw
bind -n M-> rotatecw
bind -n M-t layouttile
bind -n M-m zoom
bind -n M-h decmfact
bind -n M-l incmfact

# vim:ft=tmux
