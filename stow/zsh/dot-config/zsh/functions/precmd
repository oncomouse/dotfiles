#!/bin/zsh
# Fetch version control info before each new command line.

autoload -Uz vcs_info   # Import the vcs_info function.

# This pattern, of redefining the function being called and then calling it
# again (at the bottom of this file), lets you perform setup tasks the first
# time the function is called and ensures they are performed only once.
precmd() {
  local -i fd=-1  # `fd` stands for "file descriptor"

  # Start an asynchronous process, to avoid slowdown in large repos.
  # <( ... ) starts a process that can be read from.
  # exec {fd}< opens a new file descriptor, stores its number in $fd and
  # connects the process to it, then returns control immediately, letting the
  # process run asynchronously and non-blocking.
  exec {fd}< <(
    vcs_info
    print -r -- $vcs_info_msg_0_
  )
  zle -Fw "$fd" .vcs-info-handler  # Hook a callback widget to the fd.
}

zle -N .vcs-info-handler  # Create a widget that calls the function below.
.vcs-info-handler() {
  local -i fd=$1  # -i sets the type to integer.
  local REPLY
  {
    zle -F "$fd"  # Unhook the callback from the fd.
    read -ru$fd   # Read from the file descriptor into $REPLY.

    [[ $RPS1 == $REPLY ]] && return   # Don't repaint if there's no change.

    RPS1=$REPLY

    # Repaint only if $RPS1 is actually visible.
    [[ $CONTEXT == start ]] && zle .reset-prompt
  } always {
    exec {fd}<&-  # Close the file descriptor.
  }
}

precmd "$@"
