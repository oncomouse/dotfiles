if has('mac') && has('nvim')
  " Set Python3 to homebrew's
  let g:loaded_python_provider = 0
  let g:python3_host_prog='/usr/local/bin/python3'
  let g:ruby_host_prog = '~/.asdf/shims/neovim-ruby-host'
  let g:node_host_prog='/usr/local/bin/neovim-node-host'
  " This is macOS only, I believe, but it fixes slow start-up for clipboard:
  let g:clipboard = {
        \'copy': {'+': 'pbcopy', '*': 'pbcopy'},
        \'paste': {'+': 'pbpaste', '*': 'pbpaste'},
        \'name': 'pbcopy', 'cache_enabled': 0
        \}
endif
let &runtimepath .= ','.expand('~/dotfiles/vim/')
let &runtimepath .= ','.expand('~/dotfiles/vim/after/')
let g:complete_package = 'fzf' " fzf, clap, ale-coc.nvim, coc.nvim, or denite
call plug#begin('~/.vim/plugged/desktop/')
runtime bundle/common.vim
runtime bundle/desktop.vim
call plug#end()
runtime common.vim
let configs = [
  \ 'autocomplete',
  \ 'folds',
  \ 'fuzzy',
  \ 'git',
  \ 'statusline',
  \ 'syntax',
  \ 'theme',
  \ 'todo',
  \ 'writing',
\]
for file in configs
  execute 'runtime config/'.file.'.vim'
endfor
" Update fasd for NeoVim:
function! s:fasd_update() abort
  if empty(&buftype)
    call jobstart(['fasd', '-A', expand('%:p')])
  endif
endfunction
augroup fasd
  autocmd!
  if has('nvim')
    autocmd BufWinEnter,BufFilePost * call s:fasd_update()
  endif
augroup END
" # vim:foldmethod=marker
