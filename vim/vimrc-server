call plug#begin()
  " Themes:
  Plug 'mhartington/oceanic-next' " Theme
  " General Editing Plugins:
  Plug 'xero/securemodelines' " Secure modelines
  Plug 'jiangmiao/auto-pairs' " Autocomplete pairable marks
  Plug 'sickill/vim-pasta' " Indentation-forward pasting
  Plug 'easymotion/vim-easymotion' " <leader><leader><motion key> for fast motion
  Plug 'ntpeters/vim-better-whitespace'
  Plug 'tpope/vim-surround' " Change surrounding characters, see cheat sheet
  Plug 'nathanaelkane/vim-indent-guides' " :IndentGuidesEnable to see indentation guides
  Plug 'tpope/vim-repeat' " Repeat plugin commands
  Plug 'tpope/vim-commentary' " Comment w/ gcc or gc (visual)
  Plug 'terryma/vim-expand-region' " + or _ to expand or shrink (visual)
  Plug 'airblade/vim-rooter' " Set project root
  Plug 'rstacruz/vim-closer' " Autoclose brackets etc when pressing Enter
  Plug 'tpope/vim-endwise' " Add 'end' to the end of functions
  Plug 'docunext/closetag.vim' " Autoclose HTML tags
  " Tmux:
  Plug 'christoomey/vim-tmux-navigator' " Navigate TMUX & Vim panes with the same command
  " Syntax:
  Plug 'itchyny/lightline.vim' " Statusbar
  " Linter:
  Plug 'w0rp/ale' " Linter support
  Plug 'maximbaz/lightline-ale' " Add linter status to lightline
  Plug 'sheerun/vim-polyglot' " Syntax
  " Statusline:
  Plug 'itchyny/lightline.vim' " Statusbar
  " Linter:
  Plug 'w0rp/ale' " Linter support
  Plug 'maximbaz/lightline-ale' " Add linter status to lightline
  " Fuzzy Search:
  Plug 'Shougo/neomru.vim' " Most Recently Used file list (<leader>r to see
  Plug '~/.fzf' " Load FZF into Vim
  Plug 'junegunn/fzf.vim' " Add shorcuts for FZF
  " Git Support:
  Plug 'lambdalisue/gina.vim' " :Gina status to schedule; :Gina commit to commit
  Plug 'airblade/vim-gitgutter' " Git stats in the gutter
  " Autcomplete:
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
  Plug 'luochen1990/rainbow' " Rainbow parentheses
call plug#end()
let &runtimepath .= ','.expand('~/dotfiles/vim/')
runtime common.vim
let configs = [
  \ "deoplete",
  \ "fuzzy",
  \ "git",
  \ "statusline",
  \ "syntax",
  \ "theme",
  \ "visual-at",
\]
for file in configs
  let x = "config/".file.".vim"
  execute 'runtime' x
  endfor
runtime after.vim
